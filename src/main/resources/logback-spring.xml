<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <!-- 현재 활성 프로필 가져오기 -->
    <springProperty scope="context" name="spring.profile" source="spring.profiles.active" />
    <property name="LOGBACK_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} [%X{traceId}] - %msg%n"/>

    <!-- 개발 환경 설정 -->
    <springProfile name="dev">
        <property name="LOG_PATH" value="C:/bjj/logs" />

        <!-- INFO 이상 콘솔 출력 -->
        <appender name="DEV_CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
            <encoder>
                <pattern>${LOGBACK_PATTERN}</pattern>
            </encoder>
            <!-- INFO 레벨 이상만 필터링 -->
            <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
                <level>INFO</level>
            </filter>
        </appender>

        <!-- DEBUG 레벨 콘솔 출력 -->
        <appender name="DEV_DEBUG_CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
            <encoder>
                <pattern>${LOGBACK_PATTERN}</pattern>
            </encoder>
            <!-- DEBUG 레벨만 필터링 -->
            <filter class="ch.qos.logback.classic.filter.LevelFilter">
                <level>DEBUG</level>
                <onMatch>ACCEPT</onMatch>
                <onMismatch>DENY</onMismatch>
            </filter>
        </appender>

        <!-- DEBUG만 저장 -->
        <appender name="DEV_DEBUG_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${LOG_PATH}/debug.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>${LOG_PATH}/debug.%d{yyyy-MM-dd}.log</fileNamePattern>
                <maxHistory>14</maxHistory>
            </rollingPolicy>
            <encoder>
                <pattern>${LOGBACK_PATTERN}</pattern>
            </encoder>
            <!-- DEBUG 레벨만 필터링 -->
            <filter class="ch.qos.logback.classic.filter.LevelFilter">
                <level>DEBUG</level>
                <onMatch>ACCEPT</onMatch>
                <onMismatch>DENY</onMismatch>
            </filter>
        </appender>

        <!-- INFO만 저장 -->
        <appender name="DEV_INFO_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${LOG_PATH}/info.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>${LOG_PATH}/info.%d{yyyy-MM-dd}.log</fileNamePattern>
                <maxHistory>14</maxHistory>
            </rollingPolicy>
            <encoder>
                <pattern>${LOGBACK_PATTERN}</pattern>
            </encoder>
            <!-- INFO 레벨만 필터링 -->
            <filter class="ch.qos.logback.classic.filter.LevelFilter">
                <level>INFO</level>
                <onMatch>ACCEPT</onMatch>
                <onMismatch>DENY</onMismatch>
            </filter>
        </appender>

        <!-- 패키지별 로그 레벨 설정 -->
        <!-- sql: DEBUG 레벨 -->
        <logger name="org.hibernate.SQL" level="DEBUG" additivity="false">
            <appender-ref ref="DEV_CONSOLE" />
            <appender-ref ref="DEV_DEBUG_FILE" />
            <appender-ref ref="DEV_INFO_FILE" />
        </logger>

        <!-- security: DEBUG 레벨 -->
        <logger name="org.springframework.security" level="DEBUG" additivity="false">
            <appender-ref ref="DEV_CONSOLE" />
            <appender-ref ref="DEV_DEBUG_FILE" />
            <appender-ref ref="DEV_INFO_FILE" />
        </logger>

        <!-- BJJ: DEBUG 레벨 -->
        <logger name="com.appcenter.BJJ" level="DEBUG" additivity="false">
            <appender-ref ref="DEV_CONSOLE" />
            <appender-ref ref="DEV_DEBUG_CONSOLE" />
            <appender-ref ref="DEV_DEBUG_FILE" />
            <appender-ref ref="DEV_INFO_FILE" />
        </logger>

        <!-- AnonymousAuthenticationFilter: INFO 레벨 -->
        <logger name="org.springframework.security.web.authentication.AnonymousAuthenticationFilter"
                level="INFO" additivity="false">
            <appender-ref ref="DEV_CONSOLE" />
            <appender-ref ref="DEV_DEBUG_FILE" />
            <appender-ref ref="DEV_INFO_FILE" />
        </logger>

        <!-- FilterChainProxy: INFO 레벨 -->
        <logger name="org.springframework.security.web.FilterChainProxy"
                level="INFO" additivity="false">
            <appender-ref ref="DEV_CONSOLE" />
            <appender-ref ref="DEV_DEBUG_FILE" />
            <appender-ref ref="DEV_INFO_FILE" />
        </logger>

        <!-- 루트: INFO 레벨 -->
        <root level="INFO">
            <appender-ref ref="DEV_CONSOLE" />
            <appender-ref ref="DEV_DEBUG_FILE" />
            <appender-ref ref="DEV_INFO_FILE" />
        </root>
    </springProfile>

    <!-- 운영 환경 설정 -->
    <springProfile name="prod">
        <property name="LOG_PATH" value="/logs" />

        <!-- DEBUG만 저장 (트러블슈팅용) -->
        <appender name="PROD_DEBUG_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${LOG_PATH}/debug.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>${LOG_PATH}/debug.%d{yyyy-MM-dd}.log</fileNamePattern>
                <maxHistory>7</maxHistory>
            </rollingPolicy>
            <encoder>
                <pattern>${LOGBACK_PATTERN}</pattern>
            </encoder>
            <!-- DEBUG 레벨만 필터링 -->
            <filter class="ch.qos.logback.classic.filter.LevelFilter">
                <level>DEBUG</level>
                <onMatch>ACCEPT</onMatch>
                <onMismatch>DENY</onMismatch>
            </filter>
        </appender>

        <!-- INFO만 저장 (서비스 흐름 추적용) -->
        <appender name="PROD_INFO_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${LOG_PATH}/info.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>${LOG_PATH}/info.%d{yyyy-MM-dd}.log</fileNamePattern>
                <maxHistory>30</maxHistory>
            </rollingPolicy>
            <encoder>
                <pattern>${LOGBACK_PATTERN}</pattern>
            </encoder>
            <!-- INFO 레벨만 필터링 -->
            <filter class="ch.qos.logback.classic.filter.LevelFilter">
                <level>INFO</level>
                <onMatch>ACCEPT</onMatch>
                <onMismatch>DENY</onMismatch>
            </filter>
        </appender>

        <!-- WARN만 저장 (이상 징후 파악용) -->
        <appender name="PROD_WARN_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${LOG_PATH}/warn.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>${LOG_PATH}/warn.%d{yyyy-MM-dd}.log</fileNamePattern>
                <maxHistory>30</maxHistory>
            </rollingPolicy>
            <encoder>
                <pattern>${LOGBACK_PATTERN}</pattern>
            </encoder>
            <!-- WARN 레벨만 필터링 -->
            <filter class="ch.qos.logback.classic.filter.LevelFilter">
                <level>WARN</level>
                <onMatch>ACCEPT</onMatch>
                <onMismatch>DENY</onMismatch>
            </filter>
        </appender>


        <!-- ERROR만 저장 (중요 문제점 추적용) -->
        <appender name="PROD_ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${LOG_PATH}/error.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>${LOG_PATH}/error.%d{yyyy-MM-dd}.log</fileNamePattern>
                <maxHistory>30</maxHistory>
            </rollingPolicy>
            <encoder>
                <pattern>${LOGBACK_PATTERN}</pattern>
            </encoder>
            <!-- ERROR 레벨만 필터링 -->
            <filter class="ch.qos.logback.classic.filter.LevelFilter">
                <level>ERROR</level>
                <onMatch>ACCEPT</onMatch>
                <onMismatch>DENY</onMismatch>
            </filter>
        </appender>

        <!-- 패키지별 로그 레벨 설정 -->
        <!-- sql: DEBUG 레벨 -->
        <logger name="org.hibernate.SQL" level="DEBUG" additivity="false">
            <appender-ref ref="PROD_DEBUG_FILE"/>
            <appender-ref ref="PROD_INFO_FILE" />
            <appender-ref ref="PROD_WARN_FILE" />
            <appender-ref ref="PROD_ERROR_FILE" />
        </logger>

        <!-- security: DEBUG 레벨 -->
        <logger name="org.springframework.security" level="DEBUG" additivity="false">
            <appender-ref ref="PROD_DEBUG_FILE" />
            <appender-ref ref="PROD_INFO_FILE" />
            <appender-ref ref="PROD_WARN_FILE" />
            <appender-ref ref="PROD_ERROR_FILE" />
        </logger>

        <!-- BJJ: DEBUG 레벨 -->
        <logger name="com.appcenter.BJJ" level="DEBUG" additivity="false">
            <appender-ref ref="PROD_DEBUG_FILE" />
            <appender-ref ref="PROD_INFO_FILE" />
            <appender-ref ref="PROD_WARN_FILE" />
            <appender-ref ref="PROD_ERROR_FILE" />
        </logger>

        <!-- AnonymousAuthenticationFilter: INFO 레벨 -->
        <logger name="org.springframework.security.web.authentication.AnonymousAuthenticationFilter"
                level="INFO" additivity="false">
            <appender-ref ref="PROD_DEBUG_FILE" />
            <appender-ref ref="PROD_INFO_FILE" />
            <appender-ref ref="PROD_WARN_FILE" />
            <appender-ref ref="PROD_ERROR_FILE" />
        </logger>

        <!-- AnonymousAuthenticationFilter: INFO 레벨 -->
        <logger name="org.springframework.security.web.FilterChainProxy"
                level="INFO" additivity="false">
            <appender-ref ref="PROD_DEBUG_FILE" />
            <appender-ref ref="PROD_INFO_FILE" />
            <appender-ref ref="PROD_WARN_FILE" />
            <appender-ref ref="PROD_ERROR_FILE" />
        </logger>

        <!-- 루트: INFO 레벨 -->
        <root level="INFO">
            <appender-ref ref="PROD_DEBUG_FILE" />
            <appender-ref ref="PROD_INFO_FILE" />
            <appender-ref ref="PROD_WARN_FILE" />
            <appender-ref ref="PROD_ERROR_FILE" />
        </root>

    </springProfile>

</configuration>